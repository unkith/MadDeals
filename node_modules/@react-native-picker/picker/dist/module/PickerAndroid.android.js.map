{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","findNodeHandle","NativeSyntheticEvent","processColor","UIManager","AndroidDialogPickerNativeComponent","Commands","AndroidDialogPickerCommands","AndroidDropdownPickerNativeComponent","AndroidDropdownPickerCommands","MODE_DROPDOWN","PickerAndroid","props","ref","_global","pickerRef","useRef","FABRIC_ENABLED","global","nativeFabricUIManager","nativeSelectedIndex","setNativeSelectedIndex","useState","value","useImperativeHandle","viewManagerConfig","getViewManagerConfig","mode","blur","current","dispatchViewManagerCommand","focus","useLayoutEffect","jsValue","Children","toArray","children","map","child","index","selectedValue","shouldUpdateNativePicker","setNativeSelected","selected","setNativeProps","items","useMemo","_style$fontSize","enabled","color","contentDescription","label","style","processedColor","String","fontSize","backgroundColor","onSelect","useCallback","nativeEvent","position","onValueChange","filter","item","Picker","rootProps","accessibilityLabel","onBlur","onFocus","prompt","dropdownIconColor","dropdownIconRippleColor","testID","numberOfLines","createElement","forwardRef"],"sources":["PickerAndroid.android.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport {\n  findNodeHandle,\n  NativeSyntheticEvent,\n  processColor,\n  UIManager,\n} from 'react-native';\nimport AndroidDialogPickerNativeComponent, {\n  Commands as AndroidDialogPickerCommands,\n} from './AndroidDialogPickerNativeComponent';\nimport AndroidDropdownPickerNativeComponent, {\n  Commands as AndroidDropdownPickerCommands,\n} from './AndroidDropdownPickerNativeComponent';\n\nimport type {TextStyleProp} from 'StyleSheet';\n\nconst MODE_DROPDOWN = 'dropdown';\n\ntype PickerAndroidProps = $ReadOnly<{|\n  children?: React.Node,\n  style?: ?TextStyleProp,\n  selectedValue?: ?(number | string),\n  enabled?: ?boolean,\n  mode?: ?('dialog' | 'dropdown'),\n  onBlur?: (e: NativeSyntheticEvent<undefined>) => mixed,\n  onFocus?: (e: NativeSyntheticEvent<undefined>) => mixed,\n  onValueChange?: ?(itemValue: ?(string | number), itemIndex: number) => mixed,\n  prompt?: ?string,\n  testID?: string,\n  dropdownIconColor?: string,\n  numberOfLines?: ?number,\n|}>;\n\ntype PickerRef = React.ElementRef<\n  | typeof AndroidDialogPickerNativeComponent\n  | typeof AndroidDropdownPickerNativeComponent,\n>;\n\n/**\n * Not exposed as a public API - use <Picker> instead.\n */\nfunction PickerAndroid(props: PickerAndroidProps, ref: PickerRef): React.Node {\n  const pickerRef = React.useRef(null);\n  const FABRIC_ENABLED = !!global?.nativeFabricUIManager;\n\n  const [nativeSelectedIndex, setNativeSelectedIndex] = React.useState({\n    value: null,\n  });\n\n  React.useImperativeHandle(ref, () => {\n    const viewManagerConfig = UIManager.getViewManagerConfig(\n      props.mode === MODE_DROPDOWN\n        ? 'RNCAndroidDialogPicker'\n        : 'RNCAndroidDropdownPicker',\n    );\n    return {\n      blur: () => {\n        if (!viewManagerConfig.Commands) {\n          return;\n        }\n        if (FABRIC_ENABLED) {\n          if (props.mode === MODE_DROPDOWN) {\n            AndroidDropdownPickerCommands.blur(pickerRef.current);\n          } else {\n            AndroidDialogPickerCommands.blur(pickerRef.current);\n          }\n        } else {\n          UIManager.dispatchViewManagerCommand(\n            findNodeHandle(pickerRef.current),\n            viewManagerConfig.Commands.blur,\n            [],\n          );\n        }\n      },\n      focus: () => {\n        if (!viewManagerConfig.Commands) {\n          return;\n        }\n        if (FABRIC_ENABLED) {\n          if (props.mode === MODE_DROPDOWN) {\n            AndroidDropdownPickerCommands.focus(pickerRef.current);\n          } else {\n            AndroidDialogPickerCommands.focus(pickerRef.current);\n          }\n        } else {\n          UIManager.dispatchViewManagerCommand(\n            findNodeHandle(pickerRef.current),\n            viewManagerConfig.Commands.focus,\n            [],\n          );\n        }\n      },\n    };\n  });\n\n  React.useLayoutEffect(() => {\n    let jsValue = 0;\n    React.Children.toArray(props.children).map((child, index) => {\n      if (child === null) {\n        return null;\n      }\n      if (child.props.value === props.selectedValue) {\n        jsValue = index;\n      }\n    });\n\n    const shouldUpdateNativePicker =\n      nativeSelectedIndex.value != null &&\n      nativeSelectedIndex.value !== jsValue;\n\n    // This is necessary in case native updates the switch and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    if (shouldUpdateNativePicker && pickerRef.current) {\n      if (FABRIC_ENABLED) {\n        if (props.mode === MODE_DROPDOWN) {\n          AndroidDropdownPickerCommands.setNativeSelected(\n            pickerRef.current,\n            selected,\n          );\n        } else {\n          AndroidDialogPickerCommands.setNativeSelected(\n            pickerRef.current,\n            selected,\n          );\n        }\n      } else {\n        pickerRef.current.setNativeProps({\n          selected,\n        });\n      }\n    }\n  }, [\n    props.selectedValue,\n    nativeSelectedIndex,\n    props.children,\n    FABRIC_ENABLED,\n    props.mode,\n    selected,\n  ]);\n\n  const [items, selected] = React.useMemo(() => {\n    // eslint-disable-next-line no-shadow\n    let selected = 0;\n    // eslint-disable-next-line no-shadow\n    const items = React.Children.toArray(props.children).map((child, index) => {\n      if (child === null) {\n        return null;\n      }\n      if (child.props.value === props.selectedValue) {\n        selected = index;\n      }\n\n      const {enabled = true} = child.props;\n\n      const {color, contentDescription, label, style = {}} = child.props;\n\n      const processedColor = processColor(color);\n\n      return {\n        color: color == null ? null : processedColor,\n        contentDescription,\n        label: String(label),\n        enabled,\n        style: {\n          ...style,\n          // there seems to be a problem with codegen, where it would assign to an item\n          // the last defined value of the font size if not set explicitly\n          // 0 is handled on the native side as \"not set\"\n          fontSize: style.fontSize ?? 0,\n          color: style.color ? processColor(style.color) : null,\n          backgroundColor: style.backgroundColor\n            ? processColor(style.backgroundColor)\n            : null,\n        },\n      };\n    });\n    return [items, selected];\n  }, [props.children, props.selectedValue]);\n\n  const onSelect = React.useCallback(\n    ({nativeEvent}: PickerItemSelectSyntheticEvent) => {\n      const {position} = nativeEvent;\n      const onValueChange = props.onValueChange;\n\n      if (onValueChange != null) {\n        if (position >= 0) {\n          const children = React.Children.toArray(props.children).filter(\n            (item) => item != null,\n          );\n          const value = children[position].props.value;\n          if (props.selectedValue !== value) {\n            onValueChange(value, position);\n          }\n        } else {\n          onValueChange(null, position);\n        }\n      }\n      setNativeSelectedIndex({value: position});\n    },\n    [props.children, props.onValueChange, props.selectedValue],\n  );\n\n  const Picker =\n    props.mode === MODE_DROPDOWN\n      ? AndroidDropdownPickerNativeComponent\n      : AndroidDialogPickerNativeComponent;\n\n  const rootProps = {\n    accessibilityLabel: props.accessibilityLabel,\n    enabled: props.enabled,\n    items,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onSelect,\n    prompt: props.prompt,\n    selected,\n    style: props.style,\n    dropdownIconColor: processColor(props.dropdownIconColor),\n    dropdownIconRippleColor: processColor(props.dropdownIconRippleColor),\n    testID: props.testID,\n    numberOfLines: props.numberOfLines,\n  };\n\n  return <Picker ref={pickerRef} {...rootProps} />;\n}\n\nexport default React.forwardRef<PickerAndroidProps>(PickerAndroid);\n"],"mappings":"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"}