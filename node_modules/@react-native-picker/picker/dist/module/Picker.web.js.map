{"version":3,"names":["React","unstable_createElement","forwardRef","PickerItem","Select","props","forwardedRef","ref","Picker","enabled","onValueChange","selectedValue","itemStyle","mode","prompt","dropdownIconColor","other","handleChange","useCallback","e","selectedIndex","value","target","createElement","_extends","disabled","undefined","onChange","Item"],"sources":["Picker.web.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * @flow\n *\n */\n\nimport * as React from 'react';\nimport {unstable_createElement} from 'react-native-web';\nimport {forwardRef} from 'react';\nimport type {ViewProps} from 'react-native-web/src/exports/View/types';\nimport type {GenericStyleProp} from 'react-native-web/src/types';\nimport type {TextStyle} from 'react-native-web/src/exports/Text/types';\nimport PickerItem from './PickerItem';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: typeof PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  /**\n   * dropdownIconColor\n   * Not used for Web.\n   */\n  dropdownIconColor?: string,\n  /* compat */\n  itemStyle?: GenericStyleProp<TextStyle>,\n  mode?: string,\n  prompt?: string,\n};\n\nconst Select = forwardRef((props: $FlowFixMe, forwardedRef: $FlowFixMe) =>\n  unstable_createElement('select', {\n    ...props,\n    ref: forwardedRef,\n  }),\n);\n\nconst Picker: React$AbstractComponent<PickerProps, empty> = forwardRef<\n  PickerProps,\n  $FlowFixMe,\n>((props, forwardedRef) => {\n  const {\n    enabled,\n    onValueChange,\n    selectedValue,\n    itemStyle,\n    mode,\n    prompt,\n    dropdownIconColor,\n    ...other\n  } = props;\n\n  const handleChange = React.useCallback<any>(\n    (e: Object) => {\n      const {selectedIndex, value} = e.target;\n      if (onValueChange) {\n        onValueChange(value, selectedIndex);\n      }\n    },\n    [onValueChange],\n  );\n\n  return (\n    // $FlowFixMe\n    <Select\n      disabled={enabled === false ? true : undefined}\n      onChange={handleChange}\n      ref={forwardedRef}\n      value={selectedValue}\n      {...other}\n    />\n  );\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nexport default Picker;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,sBAAsB,QAAO,kBAAkB;AACvD,SAAQC,UAAU,QAAO,OAAO;AAIhC,OAAOC,UAAU,MAAM,cAAc;AAmBrC,MAAMC,MAAM,gBAAGF,UAAU,CAAC,CAACG,KAAiB,EAAEC,YAAwB,KACpEL,sBAAsB,CAAC,QAAQ,EAAE;EAC/B,GAAGI,KAAK;EACRE,GAAG,EAAED;AACP,CAAC,CACH,CAAC;AAED,MAAME,MAAmD,gBAAGN,UAAU,CAGpE,CAACG,KAAK,EAAEC,YAAY,KAAK;EACzB,MAAM;IACJG,OAAO;IACPC,aAAa;IACbC,aAAa;IACbC,SAAS;IACTC,IAAI;IACJC,MAAM;IACNC,iBAAiB;IACjB,GAAGC;EACL,CAAC,GAAGX,KAAK;EAET,MAAMY,YAAY,GAAGjB,KAAK,CAACkB,WAAW,CACnCC,CAAS,IAAK;IACb,MAAM;MAACC,aAAa;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IACvC,IAAIZ,aAAa,EAAE;MACjBA,aAAa,CAACW,KAAK,EAAED,aAAa,CAAC;IACrC;EACF,CAAC,EACD,CAACV,aAAa,CAChB,CAAC;EAED;IAAA;IACE;IACAV,KAAA,CAAAuB,aAAA,CAACnB,MAAM,EAAAoB,QAAA;MACLC,QAAQ,EAAEhB,OAAO,KAAK,KAAK,GAAG,IAAI,GAAGiB,SAAU;MAC/CC,QAAQ,EAAEV,YAAa;MACvBV,GAAG,EAAED,YAAa;MAClBe,KAAK,EAAEV;IAAc,GACjBK,KAAK,CACV;EAAC;AAEN,CAAC,CAAC;;AAEF;AACAR,MAAM,CAACoB,IAAI,GAAGzB,UAAU;AAExB,eAAeK,MAAM"}