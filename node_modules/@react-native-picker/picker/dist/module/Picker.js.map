{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","_toPropertyKey","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","React","Platform","PickerAndroid","PickerIOS","PickerWindows","PickerMacOS","MODE_DIALOG","MODE_DROPDOWN","PickerItem","Component","render","Picker","constructor","args","createRef","_this$pickerRef$curre","pickerRef","current","blur","_this$pickerRef$curre2","focus","OS","createElement","props","children","ref","mode"],"sources":["Picker.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport {Platform} from 'react-native';\n\nimport PickerAndroid from './PickerAndroid';\nimport PickerIOS from './PickerIOS';\nimport PickerWindows from './PickerWindows';\nimport PickerMacOS from './PickerMacOS';\n\nimport type {TextStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {Node} from 'react';\n\nconst MODE_DIALOG = 'dialog';\nconst MODE_DROPDOWN = 'dropdown';\n\ntype PickerItemProps = $ReadOnly<{|\n  /**\n   * Text to display for this item.\n   */\n  label: string,\n\n  /**\n   * The value to be passed to picker's `onValueChange` callback when\n   * this item is selected. Can be a string or an integer.\n   */\n  value?: ?(number | string),\n\n  /**\n   * Color of this item's text.\n   * @platform android\n   */\n  color?: ColorValue,\n\n  /**\n   * Used to locate the item in end-to-end tests.\n   */\n  testID?: string,\n|}>;\n\n/**\n * Individual selectable item in a Picker.\n */\nclass PickerItem extends React.Component<PickerItemProps> {\n  render(): React.Node {\n    // The items are not rendered directly\n    throw null;\n  }\n}\n\ntype PickerProps = $ReadOnly<{|\n  children?: Node,\n  style?: ?TextStyleProp,\n\n  /**\n   * Value matching value of one of the items. Can be a string or an integer.\n   */\n  selectedValue?: ?(number | string),\n\n  /**\n   * Callback for when an item is selected. This is called with the following parameters:\n   *   - `itemValue`: the `value` prop of the item that was selected\n   *   - `itemIndex`: the index of the selected item in this picker\n   */\n  onValueChange?: ?(itemValue: string | number, itemIndex: number) => mixed,\n\n  /**\n   * If set to false, the picker will be disabled, i.e. the user will not be able to make a\n   * selection.\n   * @platform android\n   */\n  enabled?: ?boolean,\n\n  /**\n   * On Android, specifies how to display the selection items when the user taps on the picker:\n   *\n   *   - 'dialog': Show a modal dialog. This is the default.\n   *   - 'dropdown': Shows a dropdown anchored to the picker view\n   *\n   * @platform android\n   */\n  mode?: ?('dialog' | 'dropdown'),\n\n  /**\n   * Style to apply to each of the item labels.\n   * @platform ios\n   */\n  itemStyle?: ?TextStyleProp,\n\n  /**\n   * Prompt string for this picker, used on Android in dialog mode as the title of the dialog.\n   * @platform android\n   */\n  prompt?: ?string,\n\n  /**\n   * Placeholder string for this picker, used on Windows if no item has been selected.\n   * @platform windows\n   */\n  placeholder?: ?string,\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: ?string,\n\n  /**\n   * On Android, used to truncate the text with an ellipsis after computing the text layout, including line wrapping,\n   * such that the total number of lines does not exceed this number. Default is '1'\n   * @platform android\n   */\n  numberOfLines?: ?number,\n\n  /**\n   * The string used for the accessibility label. Will be read once focused on the picker but not on change.\n   */\n  accessibilityLabel?: ?string,\n|}>;\n\n/**\n * Renders the native picker component on iOS and Android. Example:\n *\n *     <Picker\n *       selectedValue={this.state.language}\n *       onValueChange={(itemValue, itemIndex) => this.setState({language: itemValue})}>\n *       <Picker.Item label=\"Java\" value=\"java\" />\n *       <Picker.Item label=\"JavaScript\" value=\"js\" />\n *     </Picker>\n */\nclass Picker extends React.Component<PickerProps> {\n  pickerRef: React.ElementRef<any> = React.createRef();\n  /**\n   * On Android, display the options in a dialog.\n   */\n  static MODE_DIALOG: typeof MODE_DIALOG = MODE_DIALOG;\n\n  /**\n   * On Android, display the options in a dropdown (this is the default).\n   */\n  static MODE_DROPDOWN: typeof MODE_DROPDOWN = MODE_DROPDOWN;\n\n  static Item: typeof PickerItem = PickerItem;\n\n  static defaultProps: PickerProps = {\n    mode: MODE_DIALOG,\n  };\n\n  blur: () => void = () => {\n    this.pickerRef.current?.blur();\n  };\n\n  focus: () => void = () => {\n    this.pickerRef.current?.focus();\n  };\n\n  render(): React.Node {\n    if (Platform.OS === 'ios') {\n      /* $FlowFixMe(>=0.81.0 site=react_native_ios_fb) This suppression was\n       * added when renaming suppression sites. */\n      return <PickerIOS {...this.props}>{this.props.children}</PickerIOS>;\n    } else if (Platform.OS === 'macos') {\n      /* $FlowFixMe(>=0.81.0 site=react_native_ios_fb) This suppression was\n       * added when renaming suppression sites. */\n      return <PickerMacOS {...this.props}>{this.props.children}</PickerMacOS>;\n    } else if (Platform.OS === 'android') {\n      return (\n        /* $FlowFixMe(>=0.81.0 site=react_native_android_fb) This suppression\n         * was added when renaming suppression sites. */\n        <PickerAndroid ref={this.pickerRef} {...this.props}>\n          {this.props.children}\n        </PickerAndroid>\n      );\n    } else if (Platform.OS === 'windows') {\n      return (\n        <PickerWindows {...this.props}>{this.props.children}</PickerWindows>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Picker;\n"],"mappings":"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"}