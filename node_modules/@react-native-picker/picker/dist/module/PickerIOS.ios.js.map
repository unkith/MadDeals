{"version":3,"names":["React","processColor","StyleSheet","View","RNCPickerNativeComponent","Commands","iOSPickerCommands","useMergeRefs","refs","useCallback","current","ref","PickerIOSItem","props","PickerIOSWithForwardedRef","forwardRef","PickerIOS","forwardedRef","children","selectedValue","selectionColor","themeVariant","testID","itemStyle","numberOfLines","onChange","onValueChange","style","nativePickerRef","useRef","nativeSelectedIndex","setNativeSelectedIndex","useState","value","items","selectedIndex","useMemo","Children","toArray","map","child","index","String","label","textColor","color","parsedNumberOfLines","Math","round","useLayoutEffect","jsValue","forEach","shouldUpdateNativePicker","_global","global","nativeFabricUIManager","setNativeProps","_onChange","event","nativeEvent","newValue","newIndex","createElement","styles","pickerIOS","create","height","Item"],"sources":["PickerIOS.ios.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * This is a controlled component version of RNCPickerIOS\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport {processColor, StyleSheet, View} from 'react-native';\nimport RNCPickerNativeComponent, {\n  Commands as iOSPickerCommands,\n} from './RNCPickerNativeComponent';\nimport type {SyntheticEvent} from 'react-native/Libraries/Types/CoreEventTypes';\nimport type {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';\nimport type {\n  ColorValue,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {Element, ChildrenArray} from 'react';\n\ntype PickerIOSChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    newValue: number | string,\n    newIndex: number,\n  |}>,\n>;\n\ntype RNCPickerIOSItemType = $ReadOnly<{|\n  label: ?Label,\n  value: ?(number | string),\n  textColor: ?ColorValue,\n  testID: ?string,\n|}>;\n\ntype Label = Stringish | number;\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  // $FlowFixMe\n  children: ChildrenArray<Element<typeof PickerIOSItem>>,\n  itemStyle?: ?TextStyleProp,\n  numberOfLines: ?number,\n  onChange?: ?(event: PickerIOSChangeEvent) => mixed,\n  onValueChange?: ?(itemValue: string | number, itemIndex: number) => mixed,\n  selectedValue: ?(number | string),\n  selectionColor: ?string,\n  themeVariant: ?string,\n|}>;\n\ntype ItemProps = $ReadOnly<{|\n  label: ?Label,\n  value?: ?(number | string),\n  color?: ?ColorValue,\n  testID?: ?string,\n|}>;\n\ntype CallbackRef<T> = (T) => mixed;\ntype ObjectRef<T> = {current: T, ...};\n\ntype Ref<T> = CallbackRef<T> | ObjectRef<T>;\n\n/**\n * Constructs a new ref that forwards new values to each of the given refs. The\n * given refs will always be invoked in the order that they are supplied.\n *\n * WARNING: A known problem of merging refs using this approach is that if any\n * of the given refs change, the returned callback ref will also be changed. If\n * the returned callback ref is supplied as a `ref` to a React element, this may\n * lead to problems with the given refs being invoked more times than desired.\n */\nfunction useMergeRefs<T>(...refs: $ReadOnlyArray<?Ref<T>>): CallbackRef<T> {\n  return React.useCallback(\n    (current: T) => {\n      for (const ref of refs) {\n        if (ref != null) {\n          if (typeof ref === 'function') {\n            ref(current);\n          } else {\n            ref.current = current;\n          }\n        }\n      }\n    },\n    [...refs], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n}\n\n// $FlowFixMe\nconst PickerIOSItem: RNCPickerIOSItemType = (props: ItemProps): null => {\n  return null;\n};\n\nconst PickerIOSWithForwardedRef: React.AbstractComponent<\n  Props,\n  React.ElementRef<typeof RNCPickerNativeComponent>,\n> = React.forwardRef(function PickerIOS(props, forwardedRef): React.Node {\n  const {\n    children,\n    selectedValue,\n    selectionColor,\n    themeVariant,\n    testID,\n    itemStyle,\n    numberOfLines,\n    onChange,\n    onValueChange,\n    style,\n  } = props;\n\n  const nativePickerRef = React.useRef<React.ElementRef<\n    typeof RNCPickerNativeComponent,\n  > | null>(null);\n\n  // $FlowFixMe\n  const ref = useMergeRefs(nativePickerRef, forwardedRef);\n\n  const [nativeSelectedIndex, setNativeSelectedIndex] = React.useState({\n    value: null,\n  });\n\n  const [items, selectedIndex] = React.useMemo(() => {\n    // eslint-disable-next-line no-shadow\n    let selectedIndex = 0;\n    // eslint-disable-next-line no-shadow\n    const items = React.Children.toArray<$FlowFixMe>(children).map(\n      (child, index) => {\n        if (child === null) {\n          return null;\n        }\n        if (String(child.props.value) === String(selectedValue)) {\n          selectedIndex = index;\n        }\n        return {\n          value: String(child.props.value),\n          label: String(child.props.label),\n          textColor: processColor(child.props.color),\n          testID: child.props.testID,\n        };\n      },\n    );\n    return [items, selectedIndex];\n  }, [children, selectedValue]);\n\n  let parsedNumberOfLines = Math.round(numberOfLines ?? 1);\n  if (parsedNumberOfLines < 1) {\n    parsedNumberOfLines = 1;\n  }\n\n  React.useLayoutEffect(() => {\n    let jsValue = 0;\n    React.Children.toArray<$FlowFixMe>(children).forEach(function (\n      child: $FlowFixMe,\n      index: number,\n    ) {\n      if (String(child.props.value) === String(selectedValue)) {\n        jsValue = index;\n      }\n    });\n    // This is necessary in case native updates the switch and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    const shouldUpdateNativePicker =\n      nativeSelectedIndex.value != null &&\n      nativeSelectedIndex.value !== jsValue;\n    if (shouldUpdateNativePicker && nativePickerRef.current) {\n      if (global?.nativeFabricUIManager) {\n        iOSPickerCommands.setNativeSelectedIndex(\n          nativePickerRef.current,\n          jsValue,\n        );\n      } else {\n        nativePickerRef.current.setNativeProps({\n          selectedIndex: jsValue,\n        });\n      }\n    }\n  }, [selectedValue, nativeSelectedIndex, children]);\n\n  const _onChange = React.useCallback(\n    (event: $FlowFixMe) => {\n      onChange?.(event);\n      onValueChange?.(event.nativeEvent.newValue, event.nativeEvent.newIndex);\n      setNativeSelectedIndex({value: event.nativeEvent.newIndex});\n    },\n    [onChange, onValueChange],\n  );\n\n  return (\n    <View style={style}>\n      <RNCPickerNativeComponent\n        ref={ref}\n        themeVariant={themeVariant}\n        testID={testID}\n        style={[styles.pickerIOS, itemStyle]}\n        // $FlowFixMe\n        items={items}\n        onChange={_onChange}\n        numberOfLines={parsedNumberOfLines}\n        selectedIndex={selectedIndex}\n        selectionColor={processColor(selectionColor)}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  pickerIOS: {\n    // The picker will conform to whatever width is given, but we do\n    // have to set the component's height explicitly on the\n    // surrounding view to ensure it gets rendered.\n    height: 216,\n  },\n});\n\n// $FlowFixMe\nPickerIOSWithForwardedRef.Item = PickerIOSItem;\n\nexport default PickerIOSWithForwardedRef;\n"],"mappings":"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"}